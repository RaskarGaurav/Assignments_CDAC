package reflectionExample;

import java.lang.reflect.*;

public class Test_Reflection {
	public static void main(String[] args) throws NoSuchMethodException, SecurityException {
		//show constr
		//show methods
		//
		//Reflection -> load metadata dynamically
		
		try {
			Class clsObj =Class.forName("reflectionExample.Book");//Load Book.class file
			System.out.println("Class loaded successfully...");
			
			//get all metadata from type claObj
			Field[]  allFields=clsObj.getDeclaredFields();
			System.out.println("\nField: ");
			for (Field i: allFields) {
				System.out.println(i.getType()+" "+i.getName());
			}
			
			Method[] allMethods=clsObj.getDeclaredMethods();
			System.out.println("\nMethod: ");
			for (Method i: allMethods) {
				System.out.println(i.getReturnType()+" "+i.getName());
			}
			
			//invoke dynamically
			Constructor bookConstr = clsObj.getDeclaredConstructor(int.class,String.class);
			bookConstr.newInstance(101,"Hello")
		} catch (ClassNotFoundException e) {

			System.out.println("Class not found: " + e.getMessage());
		}
	}
}
